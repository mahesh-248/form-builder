{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function generateId(): string {\r\n  return Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nexport function formatDate(date: string | Date): string {\r\n  const d = new Date(date);\r\n  return d.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n}\r\n\r\nexport function formatRelativeTime(date: string | Date): string {\r\n  const d = new Date(date);\r\n  const now = new Date();\r\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\r\n\r\n  if (diffInSeconds < 60) {\r\n    return 'Just now';\r\n  } else if (diffInSeconds < 3600) {\r\n    const minutes = Math.floor(diffInSeconds / 60);\r\n    return `${minutes} minute${minutes > 1 ? 's' : ''} ago`;\r\n  } else if (diffInSeconds < 86400) {\r\n    const hours = Math.floor(diffInSeconds / 3600);\r\n    return `${hours} hour${hours > 1 ? 's' : ''} ago`;\r\n  } else if (diffInSeconds < 2592000) {\r\n    const days = Math.floor(diffInSeconds / 86400);\r\n    return `${days} day${days > 1 ? 's' : ''} ago`;\r\n  } else {\r\n    return formatDate(d);\r\n  }\r\n}\r\n\r\nexport function validateEmail(email: string): boolean {\r\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return re.test(email);\r\n}\r\n\r\nexport function validateUrl(url: string): boolean {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function truncateText(text: string, maxLength: number): string {\r\n  if (text.length <= maxLength) return text;\r\n  return text.substr(0, maxLength) + '...';\r\n}\r\n\r\nexport function slugify(text: string): string {\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\nexport function capitalizeFirst(text: string): string {\r\n  return text.charAt(0).toUpperCase() + text.slice(1);\r\n}\r\n\r\nexport function getContrastColor(bgColor: string): string {\r\n  // Convert hex to RGB\r\n  const color = bgColor.charAt(0) === '#' ? bgColor.substring(1, 7) : bgColor;\r\n  const r = parseInt(color.substring(0, 2), 16);\r\n  const g = parseInt(color.substring(2, 4), 16);\r\n  const b = parseInt(color.substring(4, 6), 16);\r\n  \r\n  // Calculate luminance\r\n  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n  \r\n  return luminance > 0.5 ? '#000000' : '#FFFFFF';\r\n}\r\n\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func(...args), wait);\r\n  };\r\n}\r\n\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n}\r\n\r\nexport function copyToClipboard(text: string): Promise<boolean> {\r\n  if (navigator.clipboard && window.isSecureContext) {\r\n    return navigator.clipboard.writeText(text).then(() => true).catch(() => false);\r\n  } else {\r\n    // Fallback for older browsers\r\n    const textArea = document.createElement('textarea');\r\n    textArea.value = text;\r\n    textArea.style.position = 'absolute';\r\n    textArea.style.left = '-999999px';\r\n    \r\n    document.body.prepend(textArea);\r\n    textArea.select();\r\n    \r\n    try {\r\n      document.execCommand('copy');\r\n      return Promise.resolve(true);\r\n    } catch (error) {\r\n      console.error('Failed to copy text: ', error);\r\n      return Promise.resolve(false);\r\n    } finally {\r\n      textArea.remove();\r\n    }\r\n  }\r\n}\r\n\r\nexport function downloadJSON(data: any, filename: string): void {\r\n  const json = JSON.stringify(data, null, 2);\r\n  const blob = new Blob([json], { type: 'application/json' });\r\n  const url = URL.createObjectURL(blob);\r\n  \r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  \r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport function downloadCSV(data: any[], filename: string): void {\r\n  if (data.length === 0) return;\r\n  \r\n  const headers = Object.keys(data[0]);\r\n  const csvContent = [\r\n    headers.join(','),\r\n    ...data.map(row => \r\n      headers.map(header => {\r\n        const cell = row[header];\r\n        if (cell === null || cell === undefined) return '';\r\n        if (typeof cell === 'string' && (cell.includes(',') || cell.includes('\"'))) {\r\n          return `\"${cell.replace(/\"/g, '\"\"')}\"`;\r\n        }\r\n        return cell;\r\n      }).join(',')\r\n    )\r\n  ].join('\\n');\r\n  \r\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n  const url = URL.createObjectURL(blob);\r\n  \r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  \r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport function parseQueryParams(search: string): Record<string, string> {\r\n  const params = new URLSearchParams(search);\r\n  const result: Record<string, string> = {};\r\n  \r\n  for (const [key, value] of params.entries()) {\r\n    result[key] = value;\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\nexport function buildQueryString(params: Record<string, any>): string {\r\n  const searchParams = new URLSearchParams();\r\n  \r\n  Object.entries(params).forEach(([key, value]) => {\r\n    if (value !== null && value !== undefined && value !== '') {\r\n      searchParams.append(key, String(value));\r\n    }\r\n  });\r\n  \r\n  const queryString = searchParams.toString();\r\n  return queryString ? `?${queryString}` : '';\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-slate-950 dark:focus-visible:ring-slate-300\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-slate-900 text-slate-50 hover:bg-slate-900/90 dark:bg-slate-50 dark:text-slate-900 dark:hover:bg-slate-50/90\",\r\n        destructive:\r\n          \"bg-red-500 text-slate-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-slate-50 dark:hover:bg-red-900/90\",\r\n        outline:\r\n          \"border border-slate-200 bg-white hover:bg-slate-100 hover:text-slate-900 dark:border-slate-800 dark:bg-slate-950 dark:hover:bg-slate-800 dark:hover:text-slate-50\",\r\n        secondary:\r\n          \"bg-slate-100 text-slate-900 hover:bg-slate-100/80 dark:bg-slate-800 dark:text-slate-50 dark:hover:bg-slate-800/80\",\r\n        ghost: \"hover:bg-slate-100 hover:text-slate-900 dark:hover:bg-slate-800 dark:hover:text-slate-50\",\r\n        link: \"text-slate-900 underline-offset-4 hover:underline dark:text-slate-50\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,uVACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,qMAAA,CAAA,aAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-slate-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-slate-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus-visible:ring-slate-300\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,qMAAA,CAAA,aAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6dACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/components/ui/label.tsx"],"sourcesContent":["import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <label\r\n        ref={ref}\r\n        className={cn(\r\n          \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nLabel.displayName = \"Label\";\r\n\r\nexport { Label };\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAIA,MAAM,sBAAQ,qMAAA,CAAA,UAAK,CAAC,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGf;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-slate-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-slate-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus-visible:ring-slate-300\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,yBAAW,qMAAA,CAAA,aAAgB,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qaACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border border-slate-200 bg-white text-slate-950 shadow-sm dark:border-slate-800 dark:bg-slate-950 dark:text-slate-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-slate-500 dark:text-slate-400\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,qMAAA,CAAA,aAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAAa,GAAG,KAAK;;;;;;AAErF,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,qMAAA,CAAA,aAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,qMAAA,CAAA,aAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8CAA8C;QAC3D,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAAa,GAAG,KAAK;;;;;;AAElF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/components/Navigation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport Link from 'next/link';\r\nimport { usePathname } from 'next/navigation';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus, BarChart3, Home } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport function Navigation() {\r\n  const pathname = usePathname();\r\n\r\n  const navItems = [\r\n    { href: '/', label: 'Home', icon: Home },\r\n    { href: '/forms', label: 'My Forms', icon: BarChart3 },\r\n  ];\r\n\r\n  return (\r\n    <header className=\"border-b bg-white/80 backdrop-blur-sm sticky top-0 z-50\">\r\n      <div className=\"container mx-auto px-4 py-4 flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-8\">\r\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\r\n              <span className=\"text-white font-bold text-sm\">FB</span>\r\n            </div>\r\n            <h1 className=\"text-xl font-bold\">Form Builder</h1>\r\n          </Link>\r\n          \r\n          <nav className=\"hidden md:flex items-center space-x-6\">\r\n            {navItems.map((item) => {\r\n              const Icon = item.icon;\r\n              const isActive = pathname === item.href || \r\n                (item.href === '/forms' && pathname.startsWith('/forms') && pathname !== '/forms/new');\r\n              \r\n              return (\r\n                <Link\r\n                  key={item.href}\r\n                  href={item.href}\r\n                  className={cn(\r\n                    \"flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium transition-colors\",\r\n                    isActive\r\n                      ? \"bg-blue-100 text-blue-700\"\r\n                      : \"text-gray-600 hover:text-gray-900 hover:bg-gray-100\"\r\n                  )}\r\n                >\r\n                  <Icon className=\"w-4 h-4\" />\r\n                  <span>{item.label}</span>\r\n                </Link>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-4\">\r\n          <Link href=\"/demo\">\r\n            <Button variant=\"outline\" size=\"sm\">\r\n              View Demo\r\n            </Button>\r\n          </Link>\r\n          <Link href=\"/forms/new\">\r\n            <Button size=\"sm\">\r\n              <Plus className=\"w-4 h-4 mr-2\" />\r\n              Create Form\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;;;;;;;AAQO,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,WAAW;QACf;YAAE,MAAM;YAAK,OAAO;YAAQ,MAAM,mMAAA,CAAA,OAAI;QAAC;QACvC;YAAE,MAAM;YAAU,OAAO;YAAY,MAAM,kNAAA,CAAA,YAAS;QAAC;KACtD;IAED,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;;8CACvB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAK,WAAU;kDAA+B;;;;;;;;;;;8CAEjD,8OAAC;oCAAG,WAAU;8CAAoB;;;;;;;;;;;;sCAGpC,8OAAC;4BAAI,WAAU;sCACZ,SAAS,GAAG,CAAC,CAAC;gCACb,MAAM,OAAO,KAAK,IAAI;gCACtB,MAAM,WAAW,aAAa,KAAK,IAAI,IACpC,KAAK,IAAI,KAAK,YAAY,SAAS,UAAU,CAAC,aAAa,aAAa;gCAE3E,qBACE,8OAAC,4JAAA,CAAA,UAAI;oCAEH,MAAM,KAAK,IAAI;oCACf,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0FACA,WACI,8BACA;;sDAGN,8OAAC;4CAAK,WAAU;;;;;;sDAChB,8OAAC;sDAAM,KAAK,KAAK;;;;;;;mCAVZ,KAAK,IAAI;;;;;4BAapB;;;;;;;;;;;;8BAIJ,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;0CAAK;;;;;;;;;;;sCAItC,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAK;;kDACX,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/C","debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Mahesh%20Reddy/Documents/Form%20Builder/frontend/src/app/forms/%5Bid%5D/edit/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter, useParams } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Navigation } from '@/components/Navigation';\r\nimport { ArrowLeft, Save, Eye, Settings, Plus, Trash2, GripVertical } from 'lucide-react';\r\nimport { FormField, FieldType, UpdateFormRequest, Form } from '@/types';\r\nimport { apiClient } from '@/lib/api';\r\n\r\nconst FIELD_TYPES: { type: FieldType; label: string; description: string }[] = [\r\n  { type: 'text', label: 'Text Input', description: 'Single line text input' },\r\n  { type: 'textarea', label: 'Text Area', description: 'Multi-line text input' },\r\n  { type: 'email', label: 'Email', description: 'Email address input' },\r\n  { type: 'number', label: 'Number', description: 'Numeric input' },\r\n  { type: 'multiple_choice', label: 'Multiple Choice', description: 'Radio button selection' },\r\n  { type: 'checkbox', label: 'Checkbox', description: 'Multiple selections' },\r\n  { type: 'rating', label: 'Rating', description: '1-5 star rating' },\r\n  { type: 'date', label: 'Date', description: 'Date picker' },\r\n];\r\n\r\nexport default function EditFormPage() {\r\n  const router = useRouter();\r\n  const params = useParams();\r\n  const formId = params.id as string;\r\n  \r\n  const [form, setForm] = useState<Form | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedField, setSelectedField] = useState<FormField | null>(null);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: ''\r\n  });\r\n  const [fields, setFields] = useState<FormField[]>([]);\r\n\r\n  // Load existing form data\r\n  useEffect(() => {\r\n    const loadForm = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8081/api/v1/forms/${formId}`);\r\n        if (!response.ok) throw new Error('Failed to fetch form');\r\n        const formData = await response.json();\r\n        \r\n        setForm(formData);\r\n        setFormData({\r\n          title: formData.title,\r\n          description: formData.description || ''\r\n        });\r\n        setFields(formData.fields || []);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error loading form:', err);\r\n        setError('Failed to load form');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (formId) {\r\n      loadForm();\r\n    }\r\n  }, [formId]);\r\n\r\n  const generateFieldId = () => {\r\n    return `field_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  };\r\n\r\n  const addField = (type: FieldType) => {\r\n    const newField: FormField = {\r\n      id: generateFieldId(),\r\n      type,\r\n      label: `${type.charAt(0).toUpperCase() + type.slice(1)} Field`,\r\n      required: false,\r\n      validation: { required: false },\r\n      order: fields.length,\r\n      ...(type === 'multiple_choice' || type === 'checkbox' ? { \r\n        options: [{\r\n          id: 'opt_1',\r\n          label: 'Option 1',\r\n          value: 'option_1'\r\n        }] \r\n      } : {})\r\n    };\r\n    \r\n    setFields(prev => [...prev, newField]);\r\n    return newField;\r\n  };\r\n\r\n  const updateField = (fieldId: string, updates: Partial<FormField>) => {\r\n    setFields(prev => prev.map(field => \r\n      field.id === fieldId ? { ...field, ...updates } : field\r\n    ));\r\n  };\r\n\r\n  const removeField = (fieldId: string) => {\r\n    setFields(prev => prev.filter(field => field.id !== fieldId));\r\n  };\r\n\r\n  const handleSave = async (publish = false) => {\r\n    if (!formData.title.trim()) {\r\n      setError('Form title is required');\r\n      return;\r\n    }\r\n\r\n    setSaving(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const updateData: UpdateFormRequest = {\r\n        title: formData.title,\r\n        description: formData.description,\r\n        fields: fields,\r\n        is_published: publish\r\n      };\r\n\r\n      const response = await fetch(`http://localhost:8081/api/v1/forms/${formId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updateData)\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to update form');\r\n      \r\n      if (publish) {\r\n        router.push('/forms');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error saving form:', err);\r\n      setError('Failed to save form');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleAddField = (type: FieldType) => {\r\n    const newField = addField(type);\r\n    setSelectedField(newField);\r\n  };\r\n\r\n  const handleFieldSelect = (field: FormField) => {\r\n    setSelectedField(field);\r\n  };\r\n\r\n  const handleFieldUpdate = (fieldId: string, updates: Partial<FormField>) => {\r\n    updateField(fieldId, updates);\r\n    if (selectedField?.id === fieldId) {\r\n      setSelectedField({ ...selectedField, ...updates });\r\n    }\r\n  };\r\n\r\n  const handleFieldDelete = (fieldId: string) => {\r\n    removeField(fieldId);\r\n    if (selectedField?.id === fieldId) {\r\n      setSelectedField(null);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n            <p className=\"mt-4 text-gray-600\">Loading form...</p>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (error && !form) {\r\n    return (\r\n      <>\r\n        <Navigation />\r\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-red-600\">{error}</p>\r\n            <Link href=\"/forms\">\r\n              <Button className=\"mt-4\">Back to Forms</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        {/* Header */}\r\n        <div className=\"bg-white border-b\">\r\n          <div className=\"container mx-auto px-4 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <Link href=\"/forms\">\r\n                  <Button variant=\"ghost\" size=\"sm\">\r\n                    <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n                    Back to Forms\r\n                  </Button>\r\n                </Link>\r\n                <div>\r\n                  <h1 className=\"text-xl font-semibold\">Edit Form</h1>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    Editing: {form?.title}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Button\r\n                  onClick={() => handleSave(false)}\r\n                  disabled={saving}\r\n                  variant=\"outline\"\r\n                >\r\n                  <Save className=\"w-4 h-4 mr-2\" />\r\n                  {saving ? 'Saving...' : 'Save Draft'}\r\n                </Button>\r\n                <Button\r\n                  onClick={() => handleSave(true)}\r\n                  disabled={saving}\r\n                >\r\n                  <Eye className=\"w-4 h-4 mr-2\" />\r\n                  {saving ? 'Publishing...' : 'Save & Publish'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"container mx-auto px-4 py-2\">\r\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\r\n              {error}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"container mx-auto px-4 py-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n            {/* Left Sidebar - Field Types */}\r\n            <div className=\"lg:col-span-1\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-lg\">Add Fields</CardTitle>\r\n                  <CardDescription>\r\n                    Drag and drop field types to build your form\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-2\">\r\n                    {FIELD_TYPES.map((fieldType) => (\r\n                      <Button\r\n                        key={fieldType.type}\r\n                        variant=\"outline\"\r\n                        className=\"w-full justify-start h-auto p-3\"\r\n                        onClick={() => handleAddField(fieldType.type)}\r\n                      >\r\n                        <div className=\"text-left\">\r\n                          <div className=\"font-medium\">{fieldType.label}</div>\r\n                          <div className=\"text-xs text-gray-500 mt-1\">\r\n                            {fieldType.description}\r\n                          </div>\r\n                        </div>\r\n                      </Button>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Center - Form Builder */}\r\n            <div className=\"lg:col-span-2\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>Form Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"title\">Form Title</Label>\r\n                    <Input\r\n                      id=\"title\"\r\n                      value={formData.title}\r\n                      onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                      placeholder=\"Enter form title...\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Label htmlFor=\"description\">Description (Optional)</Label>\r\n                    <Textarea\r\n                      id=\"description\"\r\n                      value={formData.description}\r\n                      onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                      placeholder=\"Enter form description...\"\r\n                      rows={3}\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Form Preview */}\r\n              <Card className=\"mt-6\">\r\n                <CardHeader>\r\n                  <CardTitle>Form Preview</CardTitle>\r\n                  <CardDescription>\r\n                    {fields.length === 0 ? 'Add fields to see preview' : `${fields.length} field(s)`}\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  {fields.length === 0 ? (\r\n                    <div className=\"text-center py-12 text-gray-500\">\r\n                      <Plus className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n                      <p>No fields added yet</p>\r\n                      <p className=\"text-sm\">Add fields from the sidebar to start building your form</p>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-4\">\r\n                      {fields.map((field, index) => (\r\n                        <div\r\n                          key={field.id}\r\n                          draggable\r\n                          onDragStart={(e) => {\r\n                            e.dataTransfer.setData('text/plain', index.toString());\r\n                            e.dataTransfer.effectAllowed = 'move';\r\n                          }}\r\n                          onDragOver={(e) => {\r\n                            e.preventDefault();\r\n                            e.dataTransfer.dropEffect = 'move';\r\n                          }}\r\n                          onDrop={(e) => {\r\n                            e.preventDefault();\r\n                            const startIndex = parseInt(e.dataTransfer.getData('text/plain'));\r\n                            if (!isNaN(startIndex) && startIndex !== index) {\r\n                              setFields(prev => {\r\n                                const copy = [...prev];\r\n                                const [removed] = copy.splice(startIndex, 1);\r\n                                copy.splice(index, 0, removed);\r\n                                return copy.map((f,i)=>({...f, order: i}));\r\n                              });\r\n                            }\r\n                          }}\r\n                          className={`group relative border rounded-lg p-4 cursor-pointer transition-all ${\r\n                            selectedField?.id === field.id\r\n                              ? 'border-blue-500 bg-blue-50'\r\n                              : 'border-gray-200 hover:border-gray-300'\r\n                          }`}\r\n                          onClick={() => handleFieldSelect(field)}\r\n                        >\r\n                          <div className=\"flex items-start justify-between\">\r\n                            <div className=\"flex-1\">\r\n                              <div className=\"flex items-center space-x-2 mb-2\">\r\n                                <GripVertical className=\"w-4 h-4 text-gray-400\" />\r\n                                <span className=\"text-sm font-medium text-gray-600\">\r\n                                  {FIELD_TYPES.find(t => t.type === field.type)?.label}\r\n                                </span>\r\n                              </div>\r\n                              \r\n                              <div className=\"space-y-2\">\r\n                                <label className=\"block text-sm font-medium text-gray-700\">\r\n                                  {field.label}\r\n                                  {field.required && <span className=\"text-red-500 ml-1\">*</span>}\r\n                                </label>\r\n                                \r\n                                {field.description && (\r\n                                  <p className=\"text-xs text-gray-500\">{field.description}</p>\r\n                                )}\r\n\r\n                                {/* Field Preview */}\r\n                                {field.type === 'text' && (\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    placeholder={field.placeholder}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                                    disabled\r\n                                  />\r\n                                )}\r\n                                {field.type === 'textarea' && (\r\n                                  <textarea\r\n                                    placeholder={field.placeholder}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                                    rows={3}\r\n                                    disabled\r\n                                  />\r\n                                )}\r\n                                {field.type === 'email' && (\r\n                                  <input\r\n                                    type=\"email\"\r\n                                    placeholder={field.placeholder || 'Enter email address'}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                                    disabled\r\n                                  />\r\n                                )}\r\n                                {field.type === 'number' && (\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    placeholder={field.placeholder}\r\n                                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                                    disabled\r\n                                  />\r\n                                )}\r\n                                {field.type === 'multiple_choice' && field.options && (\r\n                                  <div className=\"space-y-2\">\r\n                                    {field.options.map((option, optionIndex) => (\r\n                                      <label key={optionIndex} className=\"flex items-center space-x-2\">\r\n                                        <input type=\"radio\" disabled />\r\n                                        <span className=\"text-sm\">{option.label}</span>\r\n                                      </label>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n                                {field.type === 'checkbox' && field.options && (\r\n                                  <div className=\"space-y-2\">\r\n                                    {field.options.map((option, optionIndex) => (\r\n                                      <label key={optionIndex} className=\"flex items-center space-x-2\">\r\n                                        <input type=\"checkbox\" disabled />\r\n                                        <span className=\"text-sm\">{option.label}</span>\r\n                                      </label>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n                                {field.type === 'rating' && (\r\n                                  <div className=\"flex space-x-1\">\r\n                                    {[1, 2, 3, 4, 5].map((star) => (\r\n                                      <span key={star} className=\"text-gray-300 text-xl\">★</span>\r\n                                    ))}\r\n                                  </div>\r\n                                )}\r\n                                {field.type === 'date' && (\r\n                                  <input\r\n                                    type=\"date\"\r\n                                    className=\"w-full p-2 border border-gray-300 rounded text-sm\"\r\n                                    disabled\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleFieldDelete(field.id);\r\n                              }}\r\n                              className=\"opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                            >\r\n                              <Trash2 className=\"w-4 h-4 text-red-500\" />\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n\r\n            {/* Right Sidebar - Field Properties */}\r\n            <div className=\"lg:col-span-1\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-lg\">Field Properties</CardTitle>\r\n                  <CardDescription>\r\n                    {selectedField ? 'Configure the selected field' : 'Select a field to configure'}\r\n                  </CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  {selectedField ? (\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <Label htmlFor=\"field-label\">Label</Label>\r\n                        <Input\r\n                          id=\"field-label\"\r\n                          value={selectedField.label}\r\n                          onChange={(e) => handleFieldUpdate(selectedField.id, { label: e.target.value })}\r\n                        />\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Label htmlFor=\"field-description\">Description</Label>\r\n                        <Textarea\r\n                          id=\"field-description\"\r\n                          value={selectedField.description || ''}\r\n                          onChange={(e) => handleFieldUpdate(selectedField.id, { description: e.target.value })}\r\n                          rows={2}\r\n                        />\r\n                      </div>\r\n\r\n                      {['text', 'textarea', 'email', 'number'].includes(selectedField.type) && (\r\n                        <div>\r\n                          <Label htmlFor=\"field-placeholder\">Placeholder</Label>\r\n                          <Input\r\n                            id=\"field-placeholder\"\r\n                            value={selectedField.placeholder || ''}\r\n                            onChange={(e) => handleFieldUpdate(selectedField.id, { placeholder: e.target.value })}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      {['multiple_choice', 'checkbox'].includes(selectedField.type) && (\r\n                        <div>\r\n                          <Label>Options</Label>\r\n                          <div className=\"space-y-2 mt-2\">\r\n                            {(selectedField.options || []).map((option, index) => (\r\n                              <div key={index} className=\"flex items-center space-x-2\">\r\n                                <Input\r\n                                  value={option.label}\r\n                                  onChange={(e) => {\r\n                                    const newOptions = [...(selectedField.options || [])];\r\n                                    newOptions[index] = {\r\n                                      ...option,\r\n                                      label: e.target.value,\r\n                                      value: e.target.value.toLowerCase().replace(/\\s+/g, '_')\r\n                                    };\r\n                                    handleFieldUpdate(selectedField.id, { options: newOptions });\r\n                                  }}\r\n                                />\r\n                                <Button\r\n                                  variant=\"ghost\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => {\r\n                                    const newOptions = (selectedField.options || []).filter((_, i) => i !== index);\r\n                                    handleFieldUpdate(selectedField.id, { options: newOptions });\r\n                                  }}\r\n                                >\r\n                                  <Trash2 className=\"w-4 h-4\" />\r\n                                </Button>\r\n                              </div>\r\n                            ))}\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              onClick={() => {\r\n                                const newOptions = [...(selectedField.options || [])];\r\n                                const newIndex = newOptions.length + 1;\r\n                                newOptions.push({\r\n                                  id: `opt_${newIndex}`,\r\n                                  label: `Option ${newIndex}`,\r\n                                  value: `option_${newIndex}`\r\n                                });\r\n                                handleFieldUpdate(selectedField.id, { options: newOptions });\r\n                              }}\r\n                            >\r\n                              <Plus className=\"w-4 h-4 mr-2\" />\r\n                              Add Option\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id=\"field-required\"\r\n                          checked={selectedField.required || false}\r\n                          onChange={(e) => handleFieldUpdate(selectedField.id, { required: e.target.checked })}\r\n                        />\r\n                        <Label htmlFor=\"field-required\">Required field</Label>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-center text-gray-500 py-8\">\r\n                      <Settings className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n                      <p>Select a field to configure its properties</p>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}